{"version":3,"sources":["webpack:///src/app/user_tab/reset-password-modal/reset-password-modal.page.html","webpack:///src/app/user_tab/reset-password-modal/reset-password-modal.page.scss","webpack:///src/app/user_tab/user-tab-api.service.ts","webpack:///src/app/user_tab/reset-password-modal/reset-password-modal.page.ts","webpack:///src/app/user_tab/user.ts"],"names":["DadosContaApiService","http","router","nativeStorage","alertController","translateService","url","url_get_user","url_cancel_usr","url_update_user","url_change_password","url_change_user_image","id","localStorage","getItem","data_user_alert_text","user","ngOnInit","getUser","acessToken","get","apiUrl","subscribe","data","phone","Value","slice","email","console","log","put","image","resposta","err","pass","presentAlertPassword","create","header","message","buttons","alert","present","data_account","name","city","phone_number","address","user_token","response","presentAlert","cssClass","token","post","ans","navigate","removeItem","providedIn","ResetPasswordModalPage","formBuilder","dadosContaApi","modalCtr","translate","isSubmitted","reset_alert_text","passwordType","passwordIcon","passwordTyperepeat","passwordIconRepeat","dismiss","ionicForm","valid","value","pass_new","new_pass","updatePassword","group","required","minLength","pass_repeat","selector","template","User","postal"],"mappings":"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","file":"default~reset-password-modal-reset-password-modal-module~user_tab-user-tab-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"secondary\\\">\\r\\n      <ion-button (click)=\\\"goBack()\\\">\\r\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"close-circle\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n    <div id=\\\"content-menu\\\">\\r\\n      <img src=\\\"assets/BestRideLogo.png\\\" />\\r\\n    </div>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n\\r\\n\\r\\n  <div class=\\\"body\\\">\\r\\n    <svg height=\\\"100%\\\" width=\\\"100%\\\">\\r\\n      <circle cx=\\\"0\\\" cy=\\\"0\\\" r=\\\"230\\\" fill=\\\"#FFBA00\\\" />\\r\\n      <circle cx=\\\"0\\\" cy=\\\"calc(100%)\\\" r=\\\"230\\\" fill=\\\"#BC3592\\\" />\\r\\n      <circle cx=\\\"calc(100%)\\\" cy=\\\"calc(50%)\\\" r=\\\"230\\\" fill=\\\"#FF3F00\\\" />\\r\\n    </svg>\\r\\n    <div class=\\\"content\\\">\\r\\n\\r\\n      <ion-card>\\r\\n        <h1> <strong>{{'Reseat Password' | customTranslate | async}}</strong></h1>\\r\\n        <form [formGroup]=\\\"ionicForm\\\" (ngSubmit)=\\\"submitForm()\\\" novalidate>\\r\\n\\r\\n          <ion-item lines=\\\"full\\\">\\r\\n            <ion-label>{{'Previous Password' | customTranslate | async}}</ion-label>\\r\\n            <ion-input formControlName=\\\"pass\\\" [type]=\\\"passwordType\\\"></ion-input>\\r\\n            <ion-icon item-end [name]=\\\"passwordIcon\\\" class=\\\"passwordIcon\\\" (click)='hideShowPassword()'></ion-icon>\\r\\n          </ion-item>\\r\\n\\r\\n          <ion-item lines=\\\"full\\\">\\r\\n            <ion-label>{{'New Password' | customTranslate | async}}</ion-label>\\r\\n            <ion-input formControlName=\\\"pass_repeat\\\" [type]=\\\"passwordTyperepeat\\\"></ion-input>\\r\\n            <ion-icon item-end [name]=\\\"passwordIconRepeat\\\" class=\\\"passwordIconRepeat\\\"\\r\\n              (click)='hideShowPasswordRepeat()'></ion-icon>\\r\\n          </ion-item>\\r\\n\\r\\n\\r\\n          <br>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-button type=\\\"submit\\\" color=\\\"danger\\\" expand=\\\"block\\\">Submit</ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </form>\\r\\n      </ion-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</ion-content>\";","export default \"* {\\n  color: black;\\n}\\n\\n.body {\\n  background-color: #00adff;\\n  height: 100%;\\n  width: 100%;\\n}\\n\\n.content {\\n  width: 100%;\\n  height: 100%;\\n  position: absolute;\\n  top: 5%;\\n  justify-content: center;\\n  text-align: center;\\n  font-size: larger;\\n}\\n\\n#content-menu {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n#content-menu img {\\n  align-self: center;\\n  width: 39%;\\n}\\n\\nion-item {\\n  display: flex;\\n  width: 100%;\\n  flex-direction: column;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxyZXNldC1wYXNzd29yZC1tb2RhbC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFBO0FBQ0Y7O0FBRUE7RUFDRSx5QkFBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0FBQ0Y7O0FBRUE7RUFDRSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsT0FBQTtFQUNBLHVCQUFBO0VBQ0Esa0JBQUE7RUFDQSxpQkFBQTtBQUNGOztBQUVBO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0FBQ0Y7O0FBQ0U7RUFDRSxrQkFBQTtFQUNBLFVBQUE7QUFDSjs7QUFHQTtFQUNFLGFBQUE7RUFDQSxXQUFBO0VBQ0Esc0JBQUE7QUFBRiIsImZpbGUiOiJyZXNldC1wYXNzd29yZC1tb2RhbC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIqIHtcclxuICBjb2xvcjogYmxhY2s7XHJcbn1cclxuXHJcbi5ib2R5IHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDBhZGZmO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLmNvbnRlbnQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiA1JTtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgZm9udC1zaXplOiBsYXJnZXI7XHJcbn1cclxuXHJcbiNjb250ZW50LW1lbnUge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHJcbiAgaW1nIHtcclxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgIHdpZHRoOiAzOSU7XHJcbiAgfVxyXG59XHJcblxyXG5pb24taXRlbSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICB3aWR0aDogMTAwJTtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59XHJcbiJdfQ== */\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Router } from '@angular/router';\r\nimport { NativeStorage } from '@ionic-native/native-storage/ngx';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { User } from '../user_tab/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DadosContaApiService {\r\n  private url: String = '/users/';\r\n  private url_get_user: String = '/getUser/';\r\n  private url_cancel_usr: String = '/cancelAccount/';\r\n  private url_update_user: string = '/updateUser/';\r\n  private url_change_password: string = '/changePassword/';\r\n  private url_change_user_image: String = '/updateImage/';\r\n\r\n  public email_get: string;\r\n\r\n  public name: string;\r\n  public email: string;\r\n  public city: string;\r\n  public phone: string;\r\n  public address: string;\r\n  public postal: string;\r\n  public id = localStorage.getItem('id');\r\n  private data_user_alert_text = {};\r\n\r\n  public user: User;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private nativeStorage: NativeStorage,\r\n    public alertController: AlertController,\r\n    private translateService: TranslateService\r\n  ) {\r\n    this.user = new User('', '', '', '', '', '');\r\n    this.ngOnInit();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getUser();\r\n    let acessToken = localStorage.getItem('token');\r\n    this.http\r\n      .get(environment.apiUrl + this.url_get_user + acessToken)\r\n      .subscribe((data) => {\r\n        let phone = '' + data['UserAttributes'][7].Value;\r\n        phone = phone.slice(3, 12);\r\n        this.user = new User(\r\n          data['UserAttributes'][5].Value,\r\n          data['UserAttributes'][8].Value,\r\n          phone,\r\n          data['UserAttributes'][1].Value,\r\n          data['UserAttributes'][5].Value,\r\n          data['UserAttributes'][9].Value\r\n        );\r\n      });\r\n  }\r\n\r\n  public getUser(): User {\r\n    return this.user;\r\n  }\r\n\r\n  public updateImageUser(data: any) {\r\n    const email = localStorage.getItem('email');\r\n    console.log('data');\r\n    console.log(data);\r\n\r\n    this.http\r\n      .put(\r\n        environment.apiUrl +\r\n          this.url_change_user_image +\r\n          'austrixpamaj@gmail.com',\r\n        {\r\n          image: 'assasa',\r\n        }\r\n      )\r\n      .subscribe(\r\n        (resposta) => {\r\n          console.log('OKAYYAYYAAYAYAYA');\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  public updatePassword(pass: any): void {\r\n    this.http\r\n      .put(environment.apiUrl + this.url_change_password + pass['token'], pass)\r\n      .subscribe((resposta) => {\r\n        console.log(resposta);\r\n        // Sucess on changing password\r\n        this.presentAlertPassword();\r\n      });\r\n  }\r\n\r\n  async presentAlertPassword() {\r\n    const alert = await this.alertController.create({\r\n      header: 'Message',\r\n      message: 'Your Password was Changed!',\r\n      buttons: ['OK'],\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  public updateUser(data_account): void {\r\n    const data = {\r\n      name: data_account['name'],\r\n      city: data_account['city'],\r\n      email: data_account['email'],\r\n      phone_number: data_account['phone'],\r\n      address: data_account['address'],\r\n    };\r\n\r\n    const user_token = localStorage.getItem('token');\r\n    this.http\r\n      .put(environment.apiUrl + this.url_update_user + user_token, data)\r\n      .subscribe((response) => {\r\n        this.presentAlert();\r\n      });\r\n    // this.presentAlert();\r\n  }\r\n\r\n  async presentAlert() {\r\n    const alert = await this.alertController.create({\r\n      header: 'Message',\r\n      cssClass: 'my-custom-class',\r\n      message: 'Your Information was Updated !',\r\n      buttons: ['Confirm'],\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  public deleteUser(): void {\r\n    let data = {\r\n      token: localStorage.getItem('token'),\r\n    };\r\n    this.http\r\n      .post(environment.apiUrl + this.url_cancel_usr, data)\r\n      .subscribe((ans) => {\r\n        this.router.navigate(['/login']);\r\n        localStorage.removeItem('email');\r\n        localStorage.removeItem('token');\r\n      });\r\n  }\r\n}\r\n","import { Component, ContentChild, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AlertController, IonInput } from '@ionic/angular';\r\nimport { DadosContaApiService } from '../user-tab-api.service';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-reset-password-modal',\r\n  templateUrl: './reset-password-modal.page.html',\r\n  styleUrls: ['./reset-password-modal.page.scss'],\r\n})\r\nexport class ResetPasswordModalPage implements OnInit {\r\n  public ionicForm: FormGroup;\r\n  public isSubmitted = false;\r\n  private reset_alert_text = {};\r\n\r\n  constructor(\r\n    public formBuilder: FormBuilder,\r\n    public alertController: AlertController,\r\n    private dadosContaApi: DadosContaApiService,\r\n    private modalCtr: ModalController,\r\n    public translate: TranslateService,\r\n    private router: Router\r\n  ) {\r\n    this.translate.get('reset_page_modal').subscribe((data) => {\r\n      this.reset_alert_text = {\r\n        header: data['header'],\r\n        message: data['message'],\r\n        buttons: data['buttons'][0],\r\n      };\r\n    });\r\n  }\r\n\r\n  public goBack() {\r\n    this.modalCtr.dismiss();\r\n  }\r\n\r\n  async alert() {\r\n    const alert = await this.alertController.create({\r\n      header: '' + this.reset_alert_text['header'],\r\n      message: '' + this.reset_alert_text['message'],\r\n      buttons: ['' + this.reset_alert_text['buttons']],\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  passwordType: string = 'password';\r\n  passwordIcon: string = 'eye-off';\r\n\r\n  public hideShowPassword() {\r\n    this.passwordType = this.passwordType === 'text' ? 'password' : 'text';\r\n    this.passwordIcon = this.passwordIcon === 'eye-off' ? 'eye' : 'eye-off';\r\n  }\r\n\r\n  passwordTyperepeat: string = 'password';\r\n  passwordIconRepeat: string = 'eye-off';\r\n\r\n  public hideShowPasswordRepeat() {\r\n    this.passwordTyperepeat =\r\n      this.passwordTyperepeat === 'text' ? 'password' : 'text';\r\n    this.passwordIconRepeat =\r\n      this.passwordIconRepeat === 'eye-off' ? 'eye' : 'eye-off';\r\n  }\r\n\r\n  submitForm() {\r\n    this.isSubmitted = true;\r\n    if (!this.ionicForm.valid) {\r\n      this.alert();\r\n      return false;\r\n    } else {\r\n      const pass = this.ionicForm.get('pass').value;\r\n      const pass_new = this.ionicForm.get('pass_repeat').value;\r\n      const data = {\r\n        pass: pass,\r\n        new_pass: pass_new,\r\n        token: localStorage.getItem('token'),\r\n      };\r\n      this.dadosContaApi.updatePassword(data);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.ionicForm = this.formBuilder.group({\r\n      pass: ['', [Validators.required, Validators.minLength(8)]],\r\n      pass_repeat: ['', [Validators.required, Validators.minLength(8)]],\r\n    });\r\n  }\r\n}\r\n","export class User {\r\n  name: String;\r\n  city: String;\r\n  email: String;\r\n  phone: String;\r\n  address: String;\r\n  postal: String;\r\n\r\n  constructor(\r\n    name: String,\r\n    city: String,\r\n    phone: String,\r\n    address: String,\r\n    postal: String,\r\n    email: String\r\n  ) {\r\n    this.name = name;\r\n    this.city = city;\r\n    this.phone = phone;\r\n    this.address = address;\r\n    this.email = email;\r\n    this.postal = postal;\r\n  }\r\n}\r\n"]}